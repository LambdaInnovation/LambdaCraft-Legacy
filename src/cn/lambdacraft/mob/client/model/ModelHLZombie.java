// Date: 2013/7/7 绅(hen)士(tai) 7:40:42
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package cn.lambdacraft.mob.client.model;

import cn.lambdacraft.mob.entity.EntityHLZombie;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelHLZombie extends ModelBase {
	// fields
	ModelRenderer head;
	ModelRenderer hcBack11;
	ModelRenderer hcBack12;
	ModelRenderer hcBack21;
	ModelRenderer hcBack22;
	ModelRenderer body;
	ModelRenderer rightarm;
	ModelRenderer leftarm;
	ModelRenderer rightleg;
	ModelRenderer leftleg;
	ModelRenderer hcHead;
	ModelRenderer hcFront11;
	ModelRenderer hcFront21;
	ModelRenderer hcFront12;
	ModelRenderer hcFront22;

	public ModelHLZombie() {
		textureWidth = 64;
		textureHeight = 32;

	      head = new ModelRenderer(this, 0, 0);
	      head.addBox(0F, 0F, 0F, 5, 4, 5);
	      head.setRotationPoint(-2.333333F, -4F, -2.3F);
	      head.setTextureSize(64, 32);
	      head.mirror = true;
	      setRotation(head, 0F, 0F, 0.122173F);
	      hcBack11 = new ModelRenderer(this, 56, 21);
	      hcBack11.addBox(0F, 0.5333334F, 0F, 1, 2, 1);
	      hcBack11.setRotationPoint(-3F, -4F, 2F);
	      hcBack11.setTextureSize(64, 32);
	      hcBack11.mirror = true;
	      setRotation(hcBack11, 0.3292855F, 0F, 0F);
	      hcBack12 = new ModelRenderer(this, 56, 21);
	      hcBack12.addBox(0F, 1F, 0F, 1, 2, 1);
	      hcBack12.setRotationPoint(2F, -4.333333F, 1.7F);
	      hcBack12.setTextureSize(64, 32);
	      hcBack12.mirror = true;
	      setRotation(hcBack12, 0.3292855F, 0F, 0F);
	      hcBack21 = new ModelRenderer(this, 56, 18);
	      hcBack21.addBox(-0.6F, 0.06666667F, 0.03F, 1, 2, 1);
	      hcBack21.setRotationPoint(-2.333333F, -2.4F, 2.7F);
	      hcBack21.setTextureSize(64, 32);
	      hcBack21.mirror = true;
	      setRotation(hcBack21, -0.1780236F, 0F, 0F);
	      hcBack22 = new ModelRenderer(this, 56, 18);
	      hcBack22.addBox(0F, 0F, 0F, 1, 2, 1);
	      hcBack22.setRotationPoint(2F, -2F, 2.5F);
	      hcBack22.setTextureSize(64, 32);
	      hcBack22.mirror = true;
	      setRotation(hcBack22, -0.1780236F, 0F, 0F);
	      body = new ModelRenderer(this, 16, 16);
	      body.addBox(-4F, 0F, -2F, 8, 12, 4);
	      body.setRotationPoint(-0.6F, 0.2F, 0F);
	      body.setTextureSize(64, 32);
	      body.mirror = true;
	      setRotation(body, 0F, 0F, -0.0523599F);
	      rightarm = new ModelRenderer(this, 42, 17);
	      rightarm.addBox(-3F, -1F, -2F, 3, 12, 3);
	      rightarm.setRotationPoint(-4F, 2.466667F, 1F);
	      rightarm.setTextureSize(64, 32);
	      rightarm.mirror = true;
	      setRotation(rightarm, -0.553982F, 0F, 0F);
	      
	      leftarm = new ModelRenderer(this, 42, 17);
	      leftarm.addBox(-1F, -1F, -2F, 3, 12, 3);
	      leftarm.setRotationPoint(4.3F, 1F, 0.5F);
	      leftarm.setTextureSize(64, 32);
	      leftarm.mirror = true;
	      setRotation(leftarm, -0.2792527F, 0F, -0.0523599F);
	      
	      rightleg = new ModelRenderer(this, 0, 16);
	      rightleg.addBox(-2F, 0F, -2F, 4, 12, 4);
	      rightleg.setRotationPoint(-2F, 12F, 0F);
	      rightleg.setTextureSize(64, 32);
	      rightleg.mirror = true;
	      setRotation(rightleg, 0.1919862F, 0F, 0F);
	      leftleg = new ModelRenderer(this, 0, 16);
	      leftleg.addBox(-2F, 0F, -2F, 4, 12, 4);
	      leftleg.setRotationPoint(2F, 12F, 0F);
	      leftleg.setTextureSize(64, 32);
	      leftleg.mirror = true;
	      setRotation(leftleg, -0.418879F, 0F, -0.0349066F);
	      hcHead = new ModelRenderer(this, 32, 7);
	      hcHead.addBox(-3F, -1F, -3F, 6, 3, 6);
	      hcHead.setRotationPoint(0F, -4F, -0.3F);
	      hcHead.setTextureSize(64, 32);
	      hcHead.mirror = true;
	      setRotation(hcHead, 0.418879F, 0F, 0.1047198F);
	      hcFront11 = new ModelRenderer(this, 56, 28);
	      hcFront11.addBox(0F, 0F, -3F, 1, 1, 3);
	      hcFront11.setRotationPoint(1.9F, -3F, -2.3F);
	      hcFront11.setTextureSize(64, 32);
	      hcFront11.mirror = true;
	      setRotation(hcFront11, 1.064651F, 0F, 0.1047198F);
	      hcFront21 = new ModelRenderer(this, 56, 24);
	      hcFront21.addBox(0F, 0F, -0.4666667F, 1, 3, 1);
	      hcFront21.setRotationPoint(1.9F, -0.4666667F, -3.3F);
	      hcFront21.setTextureSize(64, 32);
	      hcFront21.mirror = true;
	      setRotation(hcFront21, 0.1082104F, 0F, 0F);
	      hcFront12 = new ModelRenderer(this, 56, 28);
	      hcFront12.addBox(0F, 0F, -3.466667F, 1, 1, 3);
	      hcFront12.setRotationPoint(-2.9F, -3F, -2.3F);
	      hcFront12.setTextureSize(64, 32);
	      hcFront12.mirror = true;
	      setRotation(hcFront12, 1.064651F, 0F, 0.1047198F);
	      hcFront22 = new ModelRenderer(this, 56, 24);
	      hcFront22.addBox(0F, 0F, 0F, 1, 3, 1);
	      hcFront22.setRotationPoint(-3F, -9.992007E-15F, -4F);
	      hcFront22.setTextureSize(64, 32);
	      hcFront22.mirror = true;
	      setRotation(hcFront22, 0.1198459F, 0F, 0.122173F);

	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		hcBack11.render(f5);
		hcBack12.render(f5);
		hcBack21.render(f5);
		hcBack22.render(f5);
		body.render(f5);
		rightarm.render(f5);
		leftarm.render(f5);
		rightleg.render(f5);
		leftleg.render(f5);
		hcHead.render(f5);
		head.render(f5);
		hcFront11.render(f5);
		hcFront21.render(f5);
		hcFront12.render(f5);
		hcFront22.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		EntityHLZombie zombie = (EntityHLZombie) entity;
        this.rightleg.rotateAngleX = MathHelper.cos(f * 0.6662F) * f1 * 0.8F;
        this.leftleg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * f1 * 0.4F;
        this.rightleg.rotateAngleY = 0.0F;
        this.leftleg.rotateAngleY = 0.0F;
        this.leftarm.rotateAngleY = 0.0F;
        this.rightarm.rotateAngleY = 0.0F;
        this.leftarm.rotateAngleX = -1.1F + MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.2F;
        this.rightarm.rotateAngleX = -1.25F + MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.2F;
        if(zombie.isBurning()) {
        	this.leftarm.rotateAngleX = -2.8797932658F;
        	this.rightarm.rotateAngleX = -2.9321531F;
        } else
        if(zombie.isAttacking()) {
        	if(zombie.damagetype == 0) {
        		this.rightarm.rotateAngleX = MathHelper.sin(zombie.tickCountAttack * 0.1F * (float)Math.PI) * -3F;
    			this.leftarm.rotateAngleX = MathHelper.sin(zombie.tickCountAttack * 0.1F * (float)Math.PI) * -2.8F;
        	} else {
        		float direction = zombie.damagetype == 1 ? 1.0F : -1.0F;
        		this.rightarm.rotateAngleX = -MathHelper.cos(zombie.tickCountAttack * 0.1F * (float)Math.PI) * 1.6F;
        		this.rightarm.rotateAngleY = direction * (MathHelper.sin(zombie.tickCountAttack * 0.1F * (float)Math.PI) * 2.0F - 1.5F);
        		this.leftarm.rotateAngleX = -MathHelper.cos(zombie.tickCountAttack * 0.1F * (float)Math.PI) * 1.9F;
        		this.leftarm.rotateAngleY = direction * (MathHelper.sin(zombie.tickCountAttack * 0.1F * (float)Math.PI) * 2.0F - 1.3F);
        	}
        }
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

}
